name: Release to maven central
on:
  workflow_dispatch:
    inputs:
      releaseversion:
        description: 'Release version'
        required: true
        default: '2.4.0'
jobs:
  publish-central:
    name: Publish release to maven central repository
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Cache local Maven repository
        uses: actions/cache@v3.2.6
        env:
          cache-name: cache-mvn
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Load outputs
        uses: actions/download-artifact@v3
        with:
          name: natives
          path: natives

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: NEXUS_USERNAME # env variable for username in deploy
          server-password: NEXUS_PASSWORD # env variable for token in deploy
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }} # Value of the GPG private key to import
          gpg-passphrase: GPG_PASSPHRASE # env variable for GPG private key passphrase
      - name: Generate changelog
        id: changelog
        uses: metcalfc/changelog-generator@v0.4.4
        with:
          myToken: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Set projects Maven version to GitHub Action GUI set version
        run: mvn -f java/pom.xml versions:set "-DnewVersion=${{ github.event.inputs.releaseversion }}"


      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.releaseversion }}
          release_name: ${{ github.event.inputs.releaseversion }}
          body: |
            Grab the new version from Maven central https://repo1.maven.org/maven2/com/minlia/ai/tiktoken/${{ github.event.inputs.releaseversion }}/ by using it in your dependencies:

            ```
            <dependency>
                <groupId>com.minlia.ai</groupId>
                <artifactId>tiktoken</artifactId>
                <version>${{ github.event.inputs.releaseversion }}</version>
            </dependency>
            ```
            ### Things that changed in this release
            ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false


      - name: Publish to Apache Maven Central
        run: mvn deploy --batch-mode  -DskipTests=true -f java/pom.xml
        env:
          NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
